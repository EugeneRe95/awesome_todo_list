{"version":3,"sources":["redux/types.js","components/Header.js","redux/actions.js","components/TodayDate.js","components/List.js","components/AllTasks.js","components/Today.js","components/Done.js","components/Active.js","components/Greeting.js","components/Toolbar.js","App.js","redux/rootReducer.js","index.js"],"names":["ADD_TASK","DELETE_TASK","FINISH_TASK","ADD_USER","DELETE_ALL","mapDispatch","deleteEverything","type","connect","state","user","className","title","onClick","window","confirm","exact","activeClassName","to","TodayDate","Date","getDate","getMonth","getFullYear","List","dateCheck","bind","item","aimDate","date","split","reverse","join","todayDate","today","enterAnimation","appearAnimation","leaveAnimation","duration","staggerDelayBy","this","props","tasks","length","map","id","complete","finishTask","deleteTask","noTasks","Component","payload","filter","task","addUser","useState","name","setName","error","setError","placeholder","value","onChange","e","target","preventDefault","localStorage","setItem","addTask","setTask","taskDate","setTaskDate","find","alert","App","basename","render","location","TransitionGroup","CSSTransition","classNames","timeout","path","component","AllTasks","Active","Today","Done","key","storeTasks","JSON","parse","getItem","initialState","store","createStore","action","removeItem","stringify","concat","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.72669859.chunk.js","sourcesContent":["export const ADD_TASK='TAKS/ADD_TASK'\r\nexport const DELETE_TASK='TAKS/DELETE_TASK'\r\nexport const FINISH_TASK='TAKS/FINISH_TASK'\r\n\r\nexport const ADD_USER='USER/ADD_USER'\r\n\r\nexport const DELETE_ALL='ALL/DELETE_ALL'\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {deleteEverything} from '../redux/actions'\r\n\r\nfunction Header({user, deleteEverything}) {\r\n  function trash() {\r\n    const isBoss = window.confirm(\"You are going to clear user name and all tasks, aren't you?\")\r\n    if (isBoss) {\r\n      deleteEverything()\r\n    }\r\n  }\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"user-name\">\r\n          {(user)\r\n            ?\r\n            <>\r\n            <i className=\"fas fa-trash-alt\" title=\"Delete User\" onClick={trash}></i> \r\n            <span className=\"animate__animated animate__zoomIn\">Hello<br/> {user}</span>\r\n            </>\r\n            : null}\r\n        </div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact activeClassName=\"active\" to=\"/\">All tasks</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/active-tasks\">Active</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/today-tasks\">Today's</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/done-tasks\">Done</NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {user: state.user}\r\n}\r\nconst mapDispatch = {\r\n  deleteEverything\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Header)\r\n","import { ADD_TASK, DELETE_TASK, FINISH_TASK, ADD_USER, DELETE_ALL} from './types'\r\n\r\nexport function addTask(payload){\r\n    return{\r\n        type: ADD_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function finishTask(payload){\r\n    return{\r\n        type: FINISH_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function deleteTask(payload){\r\n    return{\r\n        type: DELETE_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function addUser(payload){\r\n    return{\r\n        type: ADD_USER,\r\n        payload\r\n    }\r\n}\r\nexport function deleteEverything(){\r\n    return{\r\n        type: DELETE_ALL\r\n    }\r\n}","\r\nfunction TodayDate() {\r\n  return [\r\n    new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate(),\r\n    new Date().getMonth() + 1 < 10 ? \"0\" + new Date().getMonth() + 1 : new Date().getMonth() + 1,\r\n    new Date().getFullYear()\r\n  ]\r\n}\r\n\r\nexport default TodayDate\r\n","import React, {Component} from 'react'\r\nimport FlipMove from 'react-flip-move'\r\nimport {connect} from 'react-redux'\r\nimport {deleteTask, finishTask} from '../redux/actions'\r\n\r\nimport today from './TodayDate'\r\n\r\nexport class List extends Component {\r\n  constructor() {\r\n    super()\r\n    this.dateCheck = this.dateCheck.bind(this)\r\n  }\r\n  dateCheck(item) {\r\n    const aimDate = new Date(item.date.split('-').reverse().join(\"-\"))\r\n    const todayDate = new Date(today().reverse().join(\"-\"))\r\n    \r\n    if (+ aimDate === + todayDate) {\r\n      return <span className=\"today\">Today</span>\r\n    } else if (item.date !== 'no deadline') {\r\n      if (todayDate > aimDate) {\r\n        return <span className=\"expired\" title=\"expired\">{item.date}</span>\r\n      } else {\r\n        return <span>{item.date}</span>\r\n      }\r\n    } else {\r\n      return <span>no deadline</span>\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <FlipMove\r\n        enterAnimation=\"elevator\"\r\n        appearAnimation=\"elevator\"\r\n        leaveAnimation=\"elevator\"\r\n        duration={700}\r\n        staggerDelayBy={100}\r\n        className=\"container\">\r\n\r\n        {this.props.tasks.length !== 0\r\n          ? (this.props.tasks.map(item => (\r\n            <div\r\n              key={item.title + '/' + item.date}\r\n              id={item.title + item.date}\r\n              className={\"item\" + ((item.complete)\r\n              ? ' complete'\r\n              : '')}>\r\n              <h3>{item.title} {this.dateCheck(item)}\r\n              </h3>\r\n              <div className=\"item-tools\">\r\n                <button\r\n                  onClick={() => {\r\n                  this\r\n                    .props\r\n                    .finishTask(item)\r\n                }}>\r\n                  <i className=\"fas fa-check-circle\"></i>\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                  this\r\n                    .props\r\n                    .deleteTask(item)\r\n                }}>\r\n                  <i className=\"fas fa-minus-circle\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )))\r\n          : <h3>{this.props.noTasks}</h3>}\r\n      </FlipMove>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatch = {\r\n  deleteTask,\r\n  finishTask\r\n}\r\n\r\nexport default connect(null, mapDispatch)(List)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction AllTasks({tasks}) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List tasks={tasks} noTasks=\"No tasks yet\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {tasks: state.tasks}\r\n}\r\n\r\n\r\nexport default connect(mapState, null)(AllTasks)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nimport today from './TodayDate'\r\n\r\nfunction Today({tasks}) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List tasks={tasks} noTasks=\"No tasks for today\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  \r\n  return {\r\n    tasks: state.tasks.filter(task =>task.date === today().join('-'))\r\n  }\r\n}\r\n\r\nexport default connect(mapState, null)(Today)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction Done({tasks}) {\r\n  return (\r\n      <div className=\"list\">\r\n        <List tasks={tasks} noTasks=\"No tasks completed\" />\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    tasks: state.tasks.filter(task => task.complete === true)\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapState, null)(Done)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction Active({tasks}) {\r\n  return (\r\n      <div className=\"list\">\r\n        <List tasks={tasks} noTasks=\"No active tasks\" />\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    tasks: state.tasks.filter(task => task.complete === false)\r\n  }\r\n}\r\n\r\nexport default connect(mapState, null)(Active)\r\n","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addUser} from '../redux/actions'\r\n\r\nfunction Greeting({addUser, user}) {\r\n  const [name,\r\n    setName] = useState('')\r\n  const [error,\r\n    setError] = useState('')\r\n  function submitFrom(e) {\r\n    e.preventDefault()\r\n    if (name !== '') {\r\n      setError('')\r\n      addUser(name)\r\n      localStorage.setItem('todoList_User', name)\r\n      setName('')\r\n    } else {\r\n      setError('warn')\r\n    }\r\n  }\r\n  if (!user) {\r\n    return (\r\n      <div id=\"greeting\">\r\n        <form className=\"animate__animated animate__fadeIn\">\r\n          <input\r\n            type=\"text\"\r\n            className={(error!=='')?'warn':''}\r\n            placeholder=\"Your name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n            setName(e.target.value)\r\n          }}/>\r\n          <button onClick={submitFrom}>Submit</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }else{\r\n      return null\r\n  }\r\n}\r\n\r\nconst mapState=state=>{\r\n  return {\r\n    user:state.user\r\n  }\r\n}\r\n\r\nconst mapDispatch = {\r\n  addUser\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Greeting)\r\n","import React, { useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addTask} from '../redux/actions'\r\n\r\nimport today from './TodayDate'\r\n\r\nfunction Toolbar({addTask, tasks}) {\r\n    const [task, setTask] = useState('')\r\n    const [taskDate, setTaskDate] = useState('')\r\n    function addNewTask(){\r\n        const exists = tasks.find(item=>item.title===task && ((taskDate!=='') ? item.date===taskDate.split('-').reverse().join('-') : item.date==='no deadline'))\r\n        if(exists){\r\n            alert('Already exists')\r\n        }else if(task!==''){\r\n        if(new Date(taskDate) < new Date(today().reverse().join('-'))){\r\n            alert('This date has already passed')\r\n        }else{\r\n            addTask({title: task, complete: false, date: (taskDate!=='') ? taskDate.split('-').reverse().join('-') : ['no deadline'].join()})\r\n            setTask('')\r\n        }\r\n        }else{\r\n            alert('Put down the task name')\r\n        }\r\n    }\r\n    function handleChange(e){\r\n        setTask(e.target.value)\r\n    }\r\n    function setDate(e){\r\n        setTaskDate(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <section id=\"toolbar\">\r\n            <div className=\"container\">\r\n                <div id=\"numbers\">\r\n                    <p>All: <span>{tasks.length}</span></p>\r\n                    <p>Active: <span>{tasks.filter(task=>task.complete===false).length}</span></p>\r\n                    <p>Today's: <span>{tasks.filter(task=>task.date===today().join('-')).length}</span></p>\r\n                    <p>Done: <span>{tasks.filter(task=>task.complete===true).length}</span></p>\r\n                </div>\r\n                <div className=\"add-task-tool\">\r\n                    <input type=\"text\" placeholder=\"Task name\" value={task} onChange={handleChange} />\r\n                    <input type=\"date\" className=\"date-picker\" value={taskDate} onChange={setDate} />\r\n                    <button onClick={addNewTask}>\r\n                    Add Task\r\n                    </button>\r\n                </div> \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapState = state =>{\r\n    return{\r\n        tasks: state.tasks\r\n    }\r\n}\r\n\r\nconst mapDispatch={\r\n    addTask\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Toolbar)\r\n","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Header from './components/Header';\nimport AllTasks from './components/AllTasks'\nimport Today from './components/Today'\nimport Done from './components/Done'\n\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport 'animate.css'\nimport Active from './components/Active';\nimport Greeting from './components/Greeting';\nimport Toolbar from './components/Toolbar';\n\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\n\nfunction App() {\n  return (\n    <Router basename=\"/awesome_todo_list\">\n      <Route\n        render={({ location }) => ( <> \n        <Header/>\n         <div id = \"main-wrapper\" >\n            <div id=\"content\">\n        <Toolbar/>\n        <TransitionGroup>\n          <CSSTransition classNames=\"fade\" timeout={900} key={location.key}>\n            <Switch location={location}>\n              <Route exact path=\"/\" component={AllTasks}/>\n              <Route exact path=\"/active-tasks\" component={Active}/>\n              <Route exact path=\"/today-tasks\" component={Today}/>\n              <Route exact path=\"/done-tasks\" component={Done}/>\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n      </div>\n      <Greeting /> \n      </>\n        )}/>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ADD_TASK, DELETE_TASK, FINISH_TASK, ADD_USER, DELETE_ALL} from './types'\r\n\r\nconst storeTasks=JSON.parse(localStorage.getItem('todoList_Tasks'))\r\nconst storeUser=localStorage.getItem('todoList_User')\r\n\r\nconst initialState = {\r\n    tasks: storeTasks ? storeTasks : [],\r\n    user: storeUser\r\n}\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n  const store = JSON.parse(localStorage.getItem('todoList_Tasks'))\r\n  switch (action.type) {\r\n    case DELETE_ALL:\r\n      localStorage.removeItem('todoList_Tasks')\r\n      localStorage.removeItem('todoList_User')\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        tasks: []\r\n      }\r\n\r\n    case ADD_TASK:\r\n      if(store){\r\n        localStorage.setItem('todoList_Tasks', JSON.stringify([action.payload].concat(store))) \r\n      }else{\r\n        localStorage.setItem('todoList_Tasks', JSON.stringify([action.payload]))\r\n      }\r\n      return {...state, tasks: [action.payload].concat(state.tasks)}\r\n\r\n    case DELETE_TASK:\r\n      localStorage.setItem('todoList_Tasks', JSON.stringify(store.filter(task=>task.title!==action.payload.title || task.date!==action.payload.date)))\r\n      return {...state, tasks: state.tasks.filter(task=>task.title!==action.payload.title || task.date!==action.payload.date)}\r\n\r\n    case FINISH_TASK:\r\n      localStorage.setItem('todoList_Tasks', JSON.stringify(store.map(task=>{\r\n        if(task.title===action.payload.title && task.date===action.payload.date){\r\n          return {title: task.title, complete: true, date:task.date}\r\n        }else{\r\n          return {title: task.title, complete: task.complete, date:task.date}}\r\n      })))\r\n      return {...state, tasks: state.tasks.map(task=>{\r\n        if(task.title===action.payload.title && task.date===action.payload.date){\r\n          return {title: task.title, complete: true, date:task.date}\r\n        }else{\r\n          return {title: task.title, complete: task.complete, date:task.date}}\r\n      })}  \r\n\r\n      case ADD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport {rootReducer} from './redux/rootReducer'\nimport {Provider} from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux';\n\n// const store = createStore(rootReducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}