{"version":3,"sources":["redux/types.js","redux/actions.js","components/Header.js","components/TodayDate.js","components/List.js","components/AllTasks.js","components/Today.js","components/Done.js","components/Active.js","components/Greeting.js","components/Toolbar.js","components/Task.js","App.js","redux/rootReducer.js","index.js"],"names":["ADD_TASK","DELETE_TASK","FINISH_TASK","EDIT_TASK","ADD_USER","DELETE_ALL","finishTask","payload","type","mapDispatch","deleteEverything","connect","state","user","className","title","onClick","window","confirm","exact","activeClassName","to","TodayDate","Date","getDate","getMonth","getFullYear","List","dateCheck","bind","completeTask","item","aimDate","date","split","reverse","join","todayDate","today","this","props","complete","description","priority","enterAnimation","appearAnimation","leaveAnimation","duration","staggerDelayBy","tasks","length","map","replace","deleteTask","noTasks","Component","filter","task","addUser","useState","name","setName","error","setError","id","placeholder","value","onChange","e","target","preventDefault","localStorage","setItem","addTask","setTask","taskDate","setTaskDate","find","alert","editTask","globalProps","match","params","setPrior","setDescrip","disabledBtn","setDisabled","changed","setChange","handleChange","disabled","App","basename","render","location","TransitionGroup","CSSTransition","classNames","timeout","path","component","AllTasks","Active","Today","Done","key","storeTasks","JSON","parse","getItem","initialState","store","createStore","action","removeItem","stringify","concat","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ae7b3e95.chunk.js","sourcesContent":["export const ADD_TASK='TAKS/ADD_TASK'\r\nexport const DELETE_TASK='TAKS/DELETE_TASK'\r\nexport const FINISH_TASK='TAKS/FINISH_TASK'\r\nexport const EDIT_TASK='TAKS/EDIT_TASK'\r\n\r\nexport const ADD_USER='USER/ADD_USER'\r\n\r\nexport const DELETE_ALL='ALL/DELETE_ALL'\r\n","import { ADD_TASK, DELETE_TASK, FINISH_TASK, EDIT_TASK, ADD_USER, DELETE_ALL} from './types'\r\n\r\nexport function addTask(payload){\r\n    return{\r\n        type: ADD_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function finishTask(payload){\r\n    return{\r\n        type: FINISH_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function deleteTask(payload){\r\n    return{\r\n        type: DELETE_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function editTask(payload){\r\n    return{\r\n        type: EDIT_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function addUser(payload){\r\n    return{\r\n        type: ADD_USER,\r\n        payload\r\n    }\r\n}\r\nexport function deleteEverything(){\r\n    return{\r\n        type: DELETE_ALL\r\n    }\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {deleteEverything} from '../redux/actions'\r\n\r\nfunction Header({user, deleteEverything}) {\r\n  function trash() {\r\n    const isBoss = window.confirm(\"You are going to clear user name and all tasks, aren't you?\")\r\n    if (isBoss) {\r\n      deleteEverything()\r\n    }\r\n  }\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"user-name\">\r\n          {(user)\r\n            ?\r\n            <>\r\n            <i className=\"fas fa-trash-alt\" title=\"Delete User\" onClick={trash}></i> \r\n            <span className=\"animate__animated animate__zoomIn\">Hello<br/> {user}</span>\r\n            </>\r\n            : null}\r\n        </div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact activeClassName=\"active\" to=\"/\">All tasks</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/active-tasks\">Active</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/today-tasks\">Today's</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/done-tasks\">Done</NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {user: state.user}\r\n}\r\nconst mapDispatch = {\r\n  deleteEverything\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Header)\r\n","\r\nfunction TodayDate() {\r\n  return [\r\n    new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate(),\r\n    new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1,\r\n    new Date().getFullYear()\r\n  ]\r\n}\r\n\r\nexport default TodayDate\r\n","import React, {Component} from 'react'\r\nimport FlipMove from 'react-flip-move'\r\nimport {connect} from 'react-redux'\r\nimport {deleteTask, finishTask} from '../redux/actions'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport today from './TodayDate'\r\n\r\nexport class List extends Component {\r\n  constructor() {\r\n    super()\r\n    this.dateCheck = this.dateCheck.bind(this)\r\n    this.completeTask=this.completeTask.bind(this)\r\n  }\r\n  dateCheck(item) {\r\n    const aimDate = new Date(item.date.split('-').reverse().join(\"-\"))\r\n    const todayDate = new Date(today().reverse().join(\"-\"))\r\n    \r\n    if (+ aimDate === + todayDate) {\r\n      return <span className=\"today\">Today</span>\r\n    } else if (item.date !== 'no deadline') {\r\n      if (todayDate > aimDate) {\r\n        return <span className=\"expired\" title=\"expired\">{item.date}</span>\r\n      } else {\r\n        return <span>{item.date}</span>\r\n      }\r\n    } else {\r\n      return <span>no deadline</span>\r\n    }\r\n  }\r\n  completeTask(item){\r\n    this.props.finishTask({\r\n      title: item.title,\r\n      complete: true,\r\n      date: item.date,\r\n      description: item.description,\r\n      priority: item.priority\r\n  })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <FlipMove\r\n        enterAnimation=\"elevator\"\r\n        appearAnimation=\"elevator\"\r\n        leaveAnimation=\"elevator\"\r\n        duration={800}\r\n        staggerDelayBy={100}\r\n        className=\"container\">\r\n\r\n        {this.props.tasks.length !== 0\r\n          ? (this.props.tasks.map(item => (\r\n            <div\r\n              key={item.title + '/' + item.date}\r\n              className={\"item\" + ((item.complete)\r\n              ? ' complete'\r\n              : '')}>\r\n              <div className=\"task-heading\">\r\n                <h3>{item.title}</h3>\r\n                <div className=\"deadline\">\r\n                  {this.dateCheck(item)}\r\n                  {item.priority!=='' ? <span className={item.priority}>{item.priority}</span> : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"item-tools\">\r\n                <button className=\"edit\">\r\n                  <Link title=\"task details\" to={\"/tasks/\"+item.title.replace(\" \",\"-\")+'-'+item.date}><i className=\"fas fa-info-circle\"></i></Link>\r\n                </button>\r\n                <button className=\"complete\"\r\n                  onClick={()=>this.completeTask(item)}>\r\n                  <i className=\"fas fa-check-circle\"></i>\r\n                </button>\r\n                <button className=\"delete\"\r\n                  onClick={() => {\r\n                    this.props.deleteTask(item)\r\n                }}>\r\n                  <i className=\"fas fa-minus-circle\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )))\r\n          : <h3>{this.props.noTasks}</h3>}\r\n      </FlipMove>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatch = {\r\n  deleteTask,\r\n  finishTask\r\n}\r\n\r\nexport default connect(null, mapDispatch)(List)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction AllTasks({tasks}) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List tasks={tasks} noTasks=\"No tasks yet\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {tasks: state.tasks}\r\n}\r\n\r\n\r\nexport default connect(mapState, null)(AllTasks)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nimport today from './TodayDate'\r\n\r\nfunction Today({tasks}) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List tasks={tasks} noTasks=\"No tasks for today\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  \r\n  return {\r\n    tasks: state.tasks.filter(task =>task.date === today().join('-') && task.complete===false)\r\n  }\r\n}\r\n\r\nexport default connect(mapState, null)(Today)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction Done({tasks}) {\r\n  return (\r\n      <div className=\"list\">\r\n        <List tasks={tasks} noTasks=\"No tasks completed\" />\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    tasks: state.tasks.filter(task => task.complete === true)\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapState, null)(Done)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction Active({tasks}) {\r\n  return (\r\n      <div className=\"list\">\r\n        <List tasks={tasks} noTasks=\"No active tasks\" />\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    tasks: state.tasks.filter(task => task.complete === false)\r\n  }\r\n}\r\n\r\nexport default connect(mapState, null)(Active)\r\n","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addUser} from '../redux/actions'\r\n\r\nfunction Greeting({addUser, user}) {\r\n  const [name,\r\n    setName] = useState('')\r\n  const [error,\r\n    setError] = useState('')\r\n  function submitFrom(e) {\r\n    e.preventDefault()\r\n    if (name !== '') {\r\n      setError('')\r\n      addUser(name)\r\n      localStorage.setItem('todoList_User', name)\r\n      setName('')\r\n    } else {\r\n      setError('warn')\r\n    }\r\n  }\r\n  if (!user) {\r\n    return (\r\n      <div id=\"greeting\">\r\n        <form className=\"animate__animated animate__fadeIn\">\r\n          <input\r\n            type=\"text\"\r\n            className={(error!=='')?'warn':''}\r\n            placeholder=\"Your name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n            setName(e.target.value)\r\n          }}/>\r\n          <button onClick={submitFrom}>Submit</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }else{\r\n      return null\r\n  }\r\n}\r\n\r\nconst mapState=state=>{\r\n  return {\r\n    user:state.user\r\n  }\r\n}\r\n\r\nconst mapDispatch = {\r\n  addUser\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Greeting)\r\n","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addTask} from '../redux/actions'\r\n\r\nimport today from './TodayDate'\r\n\r\nfunction Toolbar({addTask, tasks}) {\r\n  const [task,\r\n    setTask] = useState('')\r\n  const [taskDate,\r\n    setTaskDate] = useState('')\r\n  function addNewTask() {\r\n    const exists = tasks.find(item => item.title === task && ((taskDate !== '')\r\n      ? item.date === taskDate.split('-').reverse().join('-')\r\n      : item.date === 'no deadline'))\r\n    if (exists) {\r\n      alert('Already exists')\r\n    } else if (task !== '') {\r\n      if (new Date(taskDate) < new Date(today().reverse().join(\"-\"))) {\r\n        alert('This date has already passed')\r\n      } else {\r\n        addTask({\r\n          title: task,\r\n          complete: false,\r\n          date: (taskDate !== '')\r\n            ? taskDate\r\n              .split('-')\r\n              .reverse()\r\n              .join('-')\r\n            : ['no deadline'].join(),\r\n          description: '',\r\n          priority: ''\r\n        })\r\n        setTask('')\r\n      }\r\n    } else {\r\n      alert('Put down the task name')\r\n    }\r\n  }\r\n  function handleChange(e) {\r\n    setTask(e.target.value)\r\n  }\r\n  function setDate(e) {\r\n    setTaskDate(e.target.value)\r\n  }\r\n  return (\r\n    <section id=\"toolbar\">\r\n      <div className=\"container\">\r\n        <div id=\"numbers\">\r\n          <p>All:\r\n            <span>{tasks.length}</span>\r\n          </p>\r\n          <p>Active:\r\n            <span>{tasks\r\n                .filter(task => task.complete === false)\r\n                .length}</span>\r\n          </p>\r\n          <p>Today's:\r\n            <span>{tasks.filter(task => task.date === today().join('-') && task.complete === false).length}</span>\r\n          </p>\r\n          <p>Done:\r\n            <span>{tasks\r\n                .filter(task => task.complete === true)\r\n                .length}</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"add-task-tool\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task name\"\r\n            value={task}\r\n            onChange={handleChange}/>\r\n          <input type=\"date\" className=\"date-picker\" value={taskDate} onChange={setDate}/>\r\n          <button onClick={addNewTask}>\r\n            Add Task\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {tasks: state.tasks}\r\n}\r\n\r\nconst mapDispatch = {\r\n  addTask\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Toolbar)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { finishTask, editTask } from '../redux/actions'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport today from './TodayDate'\r\n\r\nfunction Task({tasks, globalProps, finishTask, editTask}) {\r\n    const task = tasks.find(item=>item.title.replace(\" \",\"-\")+'-'+item.date===globalProps.match.params.id)\r\n\r\n    const [priority, setPrior] = useState(task.priority)\r\n    const [description, setDescrip] = useState(task.description)\r\n    const [disabledBtn, setDisabled] = useState(true)\r\n    const [changed, setChange] = useState(false)\r\n    \r\n    function handleChange(e){\r\n        setDisabled(false)\r\n        if(e.target.name===\"priority\"){\r\n            setPrior(e.target.value)\r\n        }else if(e.target.name===\"description\"){\r\n            setDescrip(e.target.value)\r\n        }\r\n    }\r\n\r\n    function saveChanges(){\r\n        editTask({\r\n            title: task.title,\r\n            complete: task.complete,\r\n            date: task.date,\r\n            description: description,\r\n            priority: priority\r\n        })\r\n        setChange(true)\r\n        setDisabled(true)\r\n    }\r\n    function completeTask(task){\r\n      finishTask({\r\n        title: task.title,\r\n        complete: true,\r\n        date: task.date,\r\n        description: task.description,\r\n        priority: task.priority\r\n    })\r\n    }\r\n\r\n    function dateCheck(item) {\r\n        const aimDate = new Date(item.date.split('-').reverse().join(\"-\"))\r\n        const todayDate = new Date(today().reverse().join(\"-\"))\r\n        \r\n        if (+ aimDate === + todayDate) {\r\n          return <span className=\"today\">Today</span>\r\n        } else if (item.date !== 'no deadline') {\r\n          if (todayDate > aimDate) {\r\n            return <span className=\"expired\" title=\"expired\">{item.date}</span>\r\n          } else {\r\n            return <span>{item.date}</span>\r\n          }\r\n        } else {\r\n          return <span>no deadline</span>\r\n        }\r\n      }\r\n    return (\r\n        <div className={\"task-page\"+((task.complete) ? ' complete' : '')}>\r\n            <div className=\"tools\">\r\n                 <button className=\"complete\" onClick={() => {\r\n                  completeTask(task)\r\n                }}>\r\n                  <i className=\"fas fa-check-circle\"></i>\r\n                </button>\r\n                <Link to=\"/\" className=\"close\"><i className=\"fas fa-arrow-circle-right\"></i></Link>\r\n            </div>\r\n            <h3 className=\"title\">{task.title} {dateCheck(task)}</h3>\r\n            <div className=\"priority\">\r\n                <label>Priority: \r\n                    <select name=\"priority\" value={priority} onChange={handleChange} >\r\n                        <option value=\"\"></option>\r\n                        <option value=\"high\">High</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"low\">Low</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div className=\"description\">\r\n                <label>\r\n                   <span>Description:</span> \r\n                    <textarea name=\"description\" value={description} onChange={handleChange}>\r\n                    </textarea>\r\n                </label>\r\n            </div>\r\n            <button disabled={disabledBtn} className=\"save-changes\" onClick={saveChanges}>Save</button>\r\n            {changed ? <h4 className=\"animate__animated animate__fadeInUp\">All changes are saved</h4> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapState = state =>{\r\n    return {\r\n        tasks: state.tasks\r\n    }\r\n}\r\nconst mapDispatch = {\r\n    finishTask,\r\n    editTask\r\n  }\r\n  \r\nexport default connect(mapState, mapDispatch)(Task)\r\n","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Header from './components/Header';\nimport AllTasks from './components/AllTasks'\nimport Today from './components/Today'\nimport Done from './components/Done'\n\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport 'animate.css'\nimport Active from './components/Active';\nimport Greeting from './components/Greeting';\nimport Toolbar from './components/Toolbar';\n\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\nimport Task from './components/Task';\n\nfunction App() {\n  return (\n    <Router basename=\"/awesome_todo_list\">\n      <Route\n        render={({ location }) => ( <> \n        <Header/>\n         <div id = \"main-wrapper\" >\n            <div id=\"content\">\n          <Toolbar/>\n          <TransitionGroup>\n            <CSSTransition classNames=\"fade\" timeout={900} key={location.key}>\n            <Switch location={location}>\n              <Route exact path=\"/\" component={AllTasks}/>\n              <Route path=\"/active-tasks\" component={Active}/>\n              <Route path=\"/today-tasks\" component={Today}/>\n              <Route path=\"/done-tasks\" component={Done}/>\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <TransitionGroup>\n          <CSSTransition classNames=\"slide\" timeout={900} key={location.key}>\n            <Switch location={location}>\n              <Route exact path=\"/tasks/:id\" render={(globalProps, props)=> <Task globalProps={globalProps}{...props} />} />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n      </div>\n      <Greeting /> \n      </>\n        )}/>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ADD_TASK, DELETE_TASK, FINISH_TASK, ADD_USER, DELETE_ALL, EDIT_TASK} from './types'\r\n\r\nconst storeTasks=JSON.parse(localStorage.getItem('todoList_Tasks'))\r\nconst storeUser=localStorage.getItem('todoList_User')\r\n\r\nconst initialState = {\r\n    tasks: storeTasks ? storeTasks : [],\r\n    user: storeUser\r\n}\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n  const store = JSON.parse(localStorage.getItem('todoList_Tasks'))\r\n  switch (action.type) {\r\n    case DELETE_ALL:\r\n      localStorage.removeItem('todoList_Tasks')\r\n      localStorage.removeItem('todoList_User')\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        tasks: []\r\n      }\r\n\r\n    case ADD_TASK:\r\n      if(store){\r\n        localStorage.setItem('todoList_Tasks', JSON.stringify([action.payload].concat(store))) \r\n      }else{\r\n        localStorage.setItem('todoList_Tasks', JSON.stringify([action.payload]))\r\n      }\r\n      return {...state, tasks: [action.payload].concat(state.tasks)}\r\n\r\n    case DELETE_TASK:\r\n      localStorage.setItem('todoList_Tasks', JSON.stringify(store.filter(task=>task.title!==action.payload.title || task.date!==action.payload.date)))\r\n      return {...state, tasks: state.tasks.filter(task=>task.title!==action.payload.title || task.date!==action.payload.date)}\r\n\r\n    case FINISH_TASK:\r\n      localStorage.setItem('todoList_Tasks', JSON.stringify(store.map(task=>{\r\n        if(task.title===action.payload.title && task.date===action.payload.date){\r\n          return action.payload\r\n        }else{\r\n          return task\r\n        }\r\n      })))\r\n      return {...state, tasks: state.tasks.map(task=>{\r\n        if(task.title===action.payload.title && task.date===action.payload.date){\r\n          return action.payload\r\n        }else{\r\n          return task\r\n        }\r\n      })}  \r\n\r\n      case EDIT_TASK:\r\n        localStorage.setItem('todoList_Tasks', JSON.stringify(store.map(task=> {\r\n          if(task.title===action.payload.title && task.date===action.payload.date){\r\n            return action.payload\r\n          } else{\r\n            return task\r\n          }\r\n        })))\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task=> {\r\n          if(task.title===action.payload.title && task.date===action.payload.date){\r\n            return action.payload\r\n          } else{\r\n            return task\r\n          }\r\n        })\r\n      }\r\n      case ADD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport {rootReducer} from './redux/rootReducer'\nimport {Provider} from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux';\n\n// const store = createStore(rootReducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}