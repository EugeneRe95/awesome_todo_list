{"version":3,"sources":["redux/types.js","components/Header.js","redux/actions.js","components/List.js","components/AllTasks.js","components/Today.js","components/Done.js","components/Active.js","components/Greeting.js","components/Toolbar.js","App.js","redux/rootReducer.js","index.js"],"names":["ADD_TASK","DELETE_TASK","FINISH_TASK","ADD_USER","DELETE_ALL","mapDispatch","deleteEverything","type","connect","state","user","className","title","onClick","window","confirm","exact","activeClassName","to","today","Date","getDate","getMonth","getFullYear","List","props","dateCheck","bind","item","t","d","date","split","join","console","log","enterAnimation","appearAnimation","leaveAnimation","duration","staggerDelayBy","this","tasks","length","map","id","complete","finishTask","deleteTask","noTasks","Component","payload","filter","task","addUser","useState","name","setName","placeholder","value","onChange","e","target","localStorage","setItem","alert","addTask","setTask","taskDate","setTaskDate","reverse","App","basename","render","location","TransitionGroup","CSSTransition","classNames","timeout","path","component","AllTasks","Active","Today","Done","key","storeTasks","JSON","parse","getItem","initialState","store","createStore","action","removeItem","stringify","concat","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f247aa43.chunk.js","sourcesContent":["export const ADD_TASK='TAKS/ADD_TASK'\r\nexport const DELETE_TASK='TAKS/DELETE_TASK'\r\nexport const FINISH_TASK='TAKS/FINISH_TASK'\r\n\r\nexport const ADD_USER='USER/ADD_USER'\r\n\r\nexport const DELETE_ALL='ALL/DELETE_ALL'\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {deleteEverything} from '../redux/actions'\r\n\r\nfunction Header({user, deleteEverything}) {\r\n  function trash() {\r\n    const isBoss = window.confirm(\"You are going to clear user name and all tasks, aren't you?\")\r\n    if (isBoss) {\r\n      deleteEverything()\r\n    }\r\n  }\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"user-name\">\r\n          {(user)\r\n            ?\r\n            <>\r\n            <i className=\"fas fa-trash-alt\" title=\"Delete User\" onClick={trash}></i> \r\n            <span className=\"animate__animated animate__zoomIn\">Hello<br/> {user}</span>\r\n            </>\r\n            : null}\r\n        </div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink exact activeClassName=\"active\" to=\"/\">All tasks</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/active-tasks\">Active</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/today-tasks\">Today's</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName=\"active\" to=\"/done-tasks\">Done</NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {user: state.user}\r\n}\r\nconst mapDispatch = {\r\n  deleteEverything\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Header)\r\n","import { ADD_TASK, DELETE_TASK, FINISH_TASK, ADD_USER, DELETE_ALL} from './types'\r\n\r\nexport function addTask(payload){\r\n    return{\r\n        type: ADD_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function finishTask(payload){\r\n    return{\r\n        type: FINISH_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function deleteTask(payload){\r\n    return{\r\n        type: DELETE_TASK,\r\n        payload\r\n    }\r\n}\r\nexport function addUser(payload){\r\n    return{\r\n        type: ADD_USER,\r\n        payload\r\n    }\r\n}\r\nexport function deleteEverything(){\r\n    return{\r\n        type: DELETE_ALL\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport FlipMove from 'react-flip-move'\r\nimport {connect} from 'react-redux'\r\nimport {deleteTask, finishTask} from '../redux/actions'\r\n\r\nconst today = [\r\n  new Date().getDate(),\r\n  new Date().getMonth() + 1,\r\n  new Date().getFullYear()\r\n]\r\n\r\n\r\n\r\nexport class List extends Component {\r\n    constructor(props){\r\n        super()\r\n        this.dateCheck=this.dateCheck.bind(this)\r\n    }\r\n    dateCheck(item) {\r\n        const t = today;\r\n        const d = item\r\n          .date\r\n          .split('.');\r\n        if (d.join('.') === t.join('.')) {\r\n          return <span className=\"today\">Today</span>\r\n        } else if (item.date !== 'no deadline') {\r\n          if (t[2] > d[2]) {\r\n            return <span className=\"expired\" title=\"expired\">{item.date}</span>\r\n          } else if (t[1] > d[1]) {\r\n            console.log(t + '/' + d)\r\n            return <span className=\"expired\" title=\"expired\">{item.date}</span>\r\n          } else if (t[0] > d[0]) {\r\n            return <span className=\"expired\" title=\"expired\">{item.date}</span>\r\n          } else {\r\n            return <span>{item.date}</span>\r\n          }\r\n        } else {\r\n          return <span>{item.date}</span>\r\n        }\r\n      }\r\n    render() {\r\n        return (\r\n            <FlipMove\r\n      enterAnimation=\"elevator\"\r\n      appearAnimation=\"elevator\"\r\n      leaveAnimation=\"elevator\"\r\n      duration={700}\r\n      staggerDelayBy={100}\r\n      className=\"container\">\r\n\r\n      {this.props.tasks.length !== 0\r\n        ? (this.props.tasks.map(item => (\r\n          <div\r\n            key={item.title + '/' + item.date}\r\n            id={item.title + item.date}\r\n            className={\"item\" + ((item.complete)\r\n            ? ' complete'\r\n            : '')}>\r\n            <h3>{item.title} {this.dateCheck(item)}\r\n            </h3>\r\n            <div className=\"item-tools\">\r\n              <button onClick={() => {\r\n                this.props.finishTask(item)\r\n              }}>\r\n                <i className=\"fas fa-check-circle\"></i>\r\n              </button>\r\n              <button onClick={() => {\r\n                this.props.deleteTask(item)\r\n              }}>\r\n                <i className=\"fas fa-minus-circle\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )))\r\n        : <h3>{this.props.noTasks}</h3>}\r\n    </FlipMove>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatch = {\r\n    deleteTask,\r\n    finishTask\r\n  }\r\n  \r\n  export default connect(null, mapDispatch)(List)\r\n  ","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction AllTasks({tasks}) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List tasks={tasks} noTasks=\"No tasks yet\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {tasks: state.tasks}\r\n}\r\n\r\n\r\nexport default connect(mapState, null)(AllTasks)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction Today({tasks}) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List tasks={tasks} noTasks=\"No tasks for today\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst today = [\r\n  new Date().getDate(),\r\n  new Date().getMonth() + 1,\r\n  new Date().getFullYear()\r\n]\r\n\r\nconst mapState = state => {\r\n  return {\r\n    tasks: state\r\n      .tasks\r\n      .filter(task => task.date === today.join('.'))\r\n  }\r\n}\r\n\r\nexport default connect(mapState, null)(Today)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction Done({tasks}) {\r\n  return (\r\n      <div className=\"list\">\r\n        <List tasks={tasks} noTasks=\"No tasks completed\" />\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    tasks: state.tasks.filter(task => task.complete === true)\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapState, null)(Done)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport List from './List'\r\n\r\nfunction Active({tasks}) {\r\n  return (\r\n      <div className=\"list\">\r\n        <List tasks={tasks} noTasks=\"No active tasks\" />\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    tasks: state.tasks.filter(task => task.complete === false)\r\n  }\r\n}\r\n\r\nexport default connect(mapState, null)(Active)\r\n","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addUser} from '../redux/actions'\r\n\r\nfunction Greeting({addUser, user}) {\r\n  const [name,\r\n    setName] = useState('')\r\n  function submitFrom() {\r\n    if (name !== '') {\r\n      addUser(name)\r\n      localStorage.setItem('todoList_User', name)\r\n      setName('')\r\n    } else {\r\n      alert('Please, put down your name!')\r\n    }\r\n  }\r\n  if (!user) {\r\n    return (\r\n      <div id=\"greeting\">\r\n        <form className=\"animate__animated animate__fadeInUp\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Your name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n            setName(e.target.value)\r\n          }}/>\r\n          <button onClick={submitFrom}>Submit</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }else{\r\n      return null\r\n  }\r\n}\r\n\r\nconst mapState=state=>{\r\n  return {\r\n    user:state.user\r\n  }\r\n}\r\n\r\nconst mapDispatch = {\r\n  addUser\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Greeting)\r\n","import React, { useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addTask} from '../redux/actions'\r\n\r\nfunction Toolbar({addTask, tasks}) {\r\n    const [task, setTask] = useState('')\r\n    const [taskDate, setTaskDate] = useState('')\r\n    function addNewTask(){\r\n        const exists = tasks.filter(item=>item.title===task && ((taskDate!=='') ? item.date===taskDate.split('-').reverse().join('.') : item.date==='no deadline'))\r\n        if(exists.length>0){\r\n            alert('Already exists')\r\n        }else if(task!==''){\r\n        addTask({title: task, complete: false, date: (taskDate!=='') ? taskDate.split('-').reverse().join('.') : ['no deadline'].join()})\r\n        setTask('')\r\n        }else{\r\n            alert('Put down the task name')\r\n        }\r\n    }\r\n    function handleChange(e){\r\n        setTask(e.target.value)\r\n    }\r\n    function setDate(e){\r\n        setTaskDate(e.target.value)\r\n    }\r\n    const today = [new Date().getDate(), new Date().getMonth()+1, new Date().getFullYear()]\r\n    return (\r\n        <section id=\"toolbar\">\r\n            <div className=\"container\">\r\n                <div id=\"numbers\">\r\n                    <p>All: <span>{tasks.length}</span></p>\r\n                    <p>Active: <span>{tasks.filter(task=>task.complete===false).length}</span></p>\r\n                    <p>Today's: <span>{tasks.filter(task=>task.date===today.join('.')).length}</span></p>\r\n                    <p>Done: <span>{tasks.filter(task=>task.complete===true).length}</span></p>\r\n                </div>\r\n                <div className=\"add-task-tool\">\r\n                    <input type=\"text\" placeholder=\"Task name\" value={task} onChange={handleChange} />\r\n                    <input type=\"date\" value={taskDate} onChange={setDate} />\r\n                    <button onClick={addNewTask}>\r\n                    Add Task\r\n                    </button>\r\n                </div> \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapState = state =>{\r\n    return{\r\n        tasks: state.tasks\r\n    }\r\n}\r\n\r\nconst mapDispatch={\r\n    addTask\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Toolbar)\r\n","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Header from './components/Header';\nimport AllTasks from './components/AllTasks'\nimport Today from './components/Today'\nimport Done from './components/Done'\n\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport 'animate.css'\nimport Active from './components/Active';\nimport Greeting from './components/Greeting';\nimport Toolbar from './components/Toolbar';\n\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\n\nfunction App() {\n  return (\n    <Router basename=\"/awesome_todo_list\">\n      <Route\n        render={({ location }) => ( <> \n        <Header/>\n         <div id = \"main-wrapper\" >\n            <div id=\"content\">\n        <Toolbar/>\n        <TransitionGroup>\n          <CSSTransition classNames=\"fade\" timeout={900} key={location.key}>\n            <Switch location={location}>\n              <Route exact path=\"/\" component={AllTasks}/>\n              <Route exact path=\"/active-tasks\" component={Active}/>\n              <Route exact path=\"/today-tasks\" component={Today}/>\n              <Route exact path=\"/done-tasks\" component={Done}/>\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n      </div>\n      <Greeting /> \n      </>\n        )}/>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ADD_TASK, DELETE_TASK, FINISH_TASK, ADD_USER, DELETE_ALL} from './types'\r\n\r\nconst storeTasks=JSON.parse(localStorage.getItem('todoList_Tasks'))\r\nconst storeUser=localStorage.getItem('todoList_User')\r\n\r\nconst initialState = {\r\n    tasks: storeTasks ? storeTasks : [],\r\n    user: storeUser\r\n}\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n  const store = JSON.parse(localStorage.getItem('todoList_Tasks'))\r\n  switch (action.type) {\r\n    case DELETE_ALL:\r\n      localStorage.removeItem('todoList_Tasks')\r\n      localStorage.removeItem('todoList_User')\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        tasks: []\r\n      }\r\n\r\n    case ADD_TASK:\r\n      if(store){\r\n        localStorage.setItem('todoList_Tasks', JSON.stringify([action.payload].concat(store))) \r\n      }else{\r\n        localStorage.setItem('todoList_Tasks', JSON.stringify([action.payload]))\r\n      }\r\n      return {...state, tasks: [action.payload].concat(state.tasks)}\r\n\r\n    case DELETE_TASK:\r\n      localStorage.setItem('todoList_Tasks', JSON.stringify(store.filter(task=>task.title!==action.payload.title || task.date!==action.payload.date)))\r\n      return {...state, tasks: state.tasks.filter(task=>task.title!==action.payload.title || task.date!==action.payload.date)}\r\n\r\n    case FINISH_TASK:\r\n      localStorage.setItem('todoList_Tasks', JSON.stringify(store.map(task=>{\r\n        if(task.title===action.payload.title && task.date===action.payload.date){\r\n          return {title: task.title, complete: true, date:task.date}\r\n        }else{\r\n          return {title: task.title, complete: task.complete, date:task.date}}\r\n      })))\r\n      return {...state, tasks: state.tasks.map(task=>{\r\n        if(task.title===action.payload.title && task.date===action.payload.date){\r\n          return {title: task.title, complete: true, date:task.date}\r\n        }else{\r\n          return {title: task.title, complete: task.complete, date:task.date}}\r\n      })}  \r\n\r\n      case ADD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport {rootReducer} from './redux/rootReducer'\nimport {Provider} from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux';\n\n// const store = createStore(rootReducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}